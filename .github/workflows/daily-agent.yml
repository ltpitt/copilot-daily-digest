name: Daily Copilot Summarizer

on:
  push:
    branches:
      - main             # Runs on pushes to main branch
  schedule:
    - cron: '0 6 * * *'  # Runs daily at 6 AM UTC
  workflow_dispatch:     # Allows manual triggering

permissions:
  contents: write        # Required to push changes
  pull-requests: write   # Required for copilot agent
  issues: write          # Required to create issues

jobs:
  scrape-and-trigger-agent:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Scrape Copilot Docs
        run: |
          echo "Starting documentation scraping..."
          python scraper/fetch_docs.py
          echo "Scraping completed. Checking for changes..."
          ls -la raw_docs/

      - name: Commit scraped content
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add raw_docs/
          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update Copilot docs - $(date -u +%Y-%m-%d)"
            git push
          fi

      - name: Create Copilot Agent Issue
        if: success()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const title = "Daily Copilot Documentation Update - " + new Date().toISOString().split('T')[0];
            const body = "@copilot Please review the latest scraped documentation in `raw_docs/` and update the following files:\n" +
              "\n" +
              "- `README.md`: Overview of Copilot Coding Agent usage\n" +
              "- `cheatsheet.md`: Slash commands, variables, setup tips\n" +
              "- `changelog.md`: Recent updates and features\n" +
              "\n" +
              "Use only the content in `raw_docs/` and format all output in Markdown.\n" +
              "\n" +
              "Instructions file: `.github/copilot-instructions.md`\n";
            try {
              const response = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: body,
                labels: ['copilot-agent', 'documentation']
              });
              console.log("Created issue #" + response.data.number + ": " + response.data.html_url);
            } catch (error) {
              console.log('Error creating issue:', error.message);
              console.log('This may be expected if similar issue already exists');
            }
